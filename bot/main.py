from aiogram import Bot, Dispatcher, Router, types
from aiogram.filters import CommandStart, Command
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, WebAppInfo
import asyncio
import config
import keyboard

bot = Bot(token=config.TOKEN)

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä
router = Router()



text = "TeeFusion ‚Äî —ç—Ç–æ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ª—é–±–∏—Ç–µ–ª–µ–π –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã—Ö –¥–∏–∑–∞–π–Ω–æ–≤! –£—á–∞—Å—Ç–≤—É–π –≤ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è—Ö –∑–∞ –ª—É—á—à–∏–π –¥–∏–∑–∞–π–Ω —Ñ—É—Ç–±–æ–ª–æ–∫: –¥–≤–∞ –¥–∏–∑–∞–π–Ω–∞ —Å–æ—Ä–µ–≤–Ω—É—é—Ç—Å—è, –∏ —Ç–≤–æ–π –≥–æ–ª–æ—Å –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å —Ä–µ—à–∞—é—â–∏–º. –ò—Å–ø–æ–ª—å–∑—É–π –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –º–æ–Ω–µ—Ç—ã –¥–ª—è –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è. –ï—Å–ª–∏ –¥–∏–∑–∞–π–Ω, –∑–∞ –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –ø—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª, –ø–æ–±–µ–∂–¥–∞–µ—Ç, —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å —Ñ—É—Ç–±–æ–ª–∫—É —Å —ç—Ç–∏–º –ø—Ä–∏–Ω—Ç–æ–º. –û—Ü–µ–Ω–∏–≤–∞–π, –≥–æ–ª–æ—Å—É–π –∏ –Ω–æ—Å–∏ —Å—Ç–∏–ª—å–Ω—ã–µ —Ñ—É—Ç–±–æ–ª–∫–∏ –æ—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π!"


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@router.message(CommandStart())
async def start_handler(message: types.Message):
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ø—Ä–æ–µ–∫—Ç TeeFusion", reply_markup=keyboard.glav_ru)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ callback_query

@router.callback_query(lambda query: query.data == 'help_ru')
async def help_handler(callback_query: types.CallbackQuery):
    await callback_query.message.delete()
    await callback_query.message.answer("–ü–æ—è–≤–∏–ª—Å—è –≤–æ–ø—Ä–æ—Å?\n–°–≤—è–∂–∏—Å—å —Å –Ω–∞—à–∏–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º @Vlad_Tichonenko", reply_markup=keyboard.Back)

@router.callback_query(lambda query: query.data == 'back')
async def back_handler(callback_query: types.CallbackQuery):
    await callback_query.message.delete()
    await callback_query.bot.send_message(callback_query.from_user.id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", reply_markup=keyboard.glav_ru)

@router.callback_query(lambda query: query.data == 'chat_ru')
async def chat_handler(callback_query: types.CallbackQuery):
    await callback_query.message.delete()
    await callback_query.message.answer("–°–ø–∏—Å–æ–∫ –Ω–∞—à–∏—Ö —á–∞—Ç–æ–≤ üìù\n https://t.me/BelarusTON \n https://t.me/ITtbcstudio", reply_markup=keyboard.Back)

@router.callback_query(lambda query: query.data == 'about')
async def about_handler(callback_query: types.CallbackQuery):
    await callback_query.message.delete()
    await callback_query.message.answer(text, reply_markup=keyboard.Back)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /admin
@router.message(Command(commands=['admin']))
async def admin_handler(message: types.Message):
    # –°—á—ë—Ç—á–∏–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π (–≤ —Ä–µ–∞–ª—å–Ω–æ–π –ª–æ–≥–∏–∫–µ –µ–≥–æ –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∞—Ç—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö)
    count = 0  # –ü—Ä–∏–º–µ—Ä–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π

    if message.from_user.id in [765843635, 165566970, 6850731097]:
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        admin_keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text=f"–ú–æ–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—èüí° [{count}]", callback_data='note')],
            [InlineKeyboardButton(text="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—èÔ∏è", url='https://example.com')]
        ])

        await message.answer(
            f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {message.from_user.first_name}, \n–≤ –ø–∞–Ω–µ–ª—å –°—É–ø–µ—Ä-–ê–¥–º–∏–Ω–∞ü¶∏",
            reply_markup=admin_keyboard
        )
    else:
        await message.answer("–í—ã –Ω–µ —è–≤–ª—è–µ—Ç–µ—Å—å –ê–¥–º–∏–Ω–æ–º ‚ùå")

@router.callback_query(lambda query: query.data == 'note')
async def about_handler(callback_query: types.CallbackQuery):
    await callback_query.message.delete()
#     –¥–æ–±–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    await callback_query.bot.send_message(callback_query.from_user.id, "–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", reply_markup=keyboard.Back)


# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main():
    dp = Dispatcher()
    dp.include_router(router)
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())
